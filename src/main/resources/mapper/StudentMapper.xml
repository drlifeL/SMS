<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dxxy.dao.StudentDao">
    <resultMap id="findStu" type="cn.dxxy.entity.Student" autoMapping="true">
        <result column="c_departments" property="faculty.cDepartments"/>
        <result column="c_name" property="faculty.cName"/>
    </resultMap>
    <!-- 查询所有学生 -->
    <select id="findAllStu" resultMap="findStu">
    select s.s_id,s_name,s_sex,s_place,s_age,s_email,f.c_departments,c_name from
    stu_info s join faculty f
    on s.c_id = f.c_id
    </select>

    <!-- 查询所有的学院 -->
    <select id="findAllFaculty" resultType="string">
       SELECT distinct c_departments
       FROM `faculty`
    </select>

    <resultMap id="detailClass" type="cn.dxxy.entity.Faculty" autoMapping="true">
        <id column="c_id" property="cId"/>
        <result column="c_name" property="cName"/>
        <result column="c_departments" property="cDepartments"/>
    </resultMap>

    <!-- 给定一个学院，查询该学院下的所有班级 -->
    <select id="getDeptDetail" resultType="cn.dxxy.entity.Faculty">
        select c_id,c_name from faculty where c_departments = #{deptName}
    </select>

    <!-- 添加学生 -->
    <insert id="addStudent" parameterType="cn.dxxy.entity.Student">
        insert into stu_info(s_id,s_name,s_sex,s_place,s_age,s_email,c_id) values(
            #{sId},#{sName},#{sSex},#{sPlace},#{sAge},#{sEmail},#{cId}
        )
    </insert>

    <resultMap id="findStuById" type="cn.dxxy.entity.Student" autoMapping="true">
        <association property="faculty" javaType="cn.dxxy.entity.Faculty" autoMapping="true">
        </association>
    </resultMap>
    <select id="findStudentById" resultMap="findStuById">
        select * from stu_info s join faculty f on s.c_id = f.c_id where s_id = #{sId}
    </select>

    <update id="updateStu">
        update stu_info
        <set>
            <if test="sName!=null">
                s_name = #{sName},
            </if>
            <if test="sSex!=null">
                s_sex = #{sSex},
            </if>
            <if test="cId!=null">
                c_id = #{cId},
            </if>
            <if test="sPlace!=null">
                s_place = #{sPlace},
            </if>
            <if test="sAge!=null">
                s_age = #{sAge},
            </if>
            <if test="sEmail!=null">
                s_email = #{sEmail}
            </if>
        </set>
        where s_id = #{sId}
    </update>


    <delete id="delStudent">
        delete from stu_info where s_id = #{sId}
    </delete>

</mapper>